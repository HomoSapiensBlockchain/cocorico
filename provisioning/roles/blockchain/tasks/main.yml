- set_fact: role_name=blockchain

- name: create role directory
  when: capabilities.bill.vote == "blockchain"
  file: path={{ project_dir}}/{{ role_name }} state=directory

- name: install ethereum dependencies
  when: capabilities.bill.vote == "blockchain"
  apt: name=software-properties-common state=present

- name: add ethereum PPAs
  when: capabilities.bill.vote == "blockchain"
  apt_repository: repo={{ item }}
  with_items:
    - ppa:ethereum/ethereum
    - ppa:ethereum/ethereum-qt

- name: install ethereum
  when: capabilities.bill.vote == "blockchain"
  apt: name={{ item }} update_cache=yes
  with_items:
    - ethereum
    - cpp-ethereum

- name: install testrpc
  command: npm install -g ethereumjs-testrpc --unsafe-perm
  args:
    creates: /usr/lib/node_modules/ethereumjs-testrpc
  when:
    - capabilities.bill.vote == "blockchain"
    - is_development_environment

- lineinfile: line={{ ethereum_etherbase_password }} dest={{ project_dir}}/{{ role_name }}/password mode=700 state=present create=yes
  when: capabilities.bill.vote == "blockchain"
  register: ethereum_password_file

- stat: path={{ project_dir }}/{{ role_name }}/data/keystore
  register: ethereum_keystore_file
  when: capabilities.bill.vote == "blockchain"

- name: create ethereum account
  shell: geth --datadir {{ ethereum_datadir }} --password {{ project_dir}}/{{ role_name }}/password account new
  register: result
  when:
    - capabilities.bill.vote == "blockchain"
    - ethereum_password_file.changed or not ethereum_keystore_file.stat.exists

- name: extract etherbase address
  set_fact: ethereum_etherbase_address="{{ result.stdout | regex_replace('^Mining Beneficiary.* (.*)$', '\\1') }}"
  when:
    - capabilities.bill.vote == "blockchain"
    - ethereum_password_file.changed

- name: install genesis block
  template: src=genesis_block.json.j2 dest={{ project_dir}}/{{ role_name }}/genesis_block.json
  when:
    - capabilities.bill.vote == "blockchain"
    - ethereum_password_file.changed

- name: install upstart script
  template: src=blockchain.upstart.conf.j2 dest=/etc/init/cocorico-blockchain.conf

- name: install miner upstart script
  template: src=blockchain-miner.upstart.conf.j2 dest=/etc/init/cocorico-blockchain-miner.conf

- name: start the ethereum blockchain service
  service: name=cocorico-blockchain state=started
  when: capabilities.bill.vote == "blockchain"

- name: stop the ethereum blockchain service
  service: name=cocorico-blockchain state=stopped
  when: not capabilities.bill.vote == "blockchain"

- name: start the ethereum blockchain mining service
  service: name=cocorico-blockchain-miner state=started
  when:
    - capabilities.bill.vote == "blockchain"
    - ethereum_mine_on_boot

- name: stop the ethereum blockchain mining service
  service: name=cocorico-blockchain-miner state=stopped
  when: capabilities.bill.vote != "blockchain"

- name: install apache configuration
  template: src={{ role_name }}.apache.conf.j2 dest=/etc/apache2/sites-available/cocorico-front-web-include/{{ project_name }}-{{ role_name }}.conf
  when: capabilities.bill.vote == "blockchain"
  notify:
    - restart apache2 service
