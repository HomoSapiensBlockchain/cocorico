---
- set_fact: role_name=front-web

- name: install apache2
  apt: name={{ item }} state=present
  with_items:
    - apache2

- name: enable apache modules
  apache2_module: name={{ item }} state=present
  with_items:
    - deflate
    - filter
    - headers
    - proxy
    - proxy_http
    - proxy_wstunnel
    - ssl
    - rewrite

- name: disable apache modules
  apache2_module: name={{ item }} state=absent
  with_items:
    - autoindex
  notify:
    - restart apache2 service

- name: install hosts
  lineinfile: dest=/etc/hosts line='{{ item }}'
  with_items:
    - "127.0.0.1 localhost"
    - "127.0.0.1 {{ front_web_public_host }} {{ front_hostname }} {{ project_name }} {{ hostname }}"
  when:
    - provider != 'docker'

- name: install htpasswd
  copy: src=.htpasswd dest=/etc/apache2/.htpasswd
  when: environment_name == 'staging'

- name: install site configuration
  template: src={{ project_name }}-{{ role_name }}.conf.j2 dest=/etc/apache2/sites-available/{{ project_name }}-{{ role_name }}.conf
  notify:
    - restart apache2 service

- name: enable site
  file: src=/etc/apache2/sites-available/{{ project_name }}-{{ role_name }}.conf dest=/etc/apache2/sites-enabled/{{ project_name }}-{{ role_name }}.conf state=link
  notify:
    - restart apache2 service

- name: disable default vhost
  file: path=/etc/apache2/sites-enabled/000-default.conf state=absent
  notify:
    - restart apache2 service

- name: delete default html files
  file: path=/var/www/html state=absent

- name: create ssl directory
  file: path=/etc/apache2/ssl state=directory

- name: create include directory
  file: path=/etc/apache2/sites-available/{{ project_name}}-{{ role_name }}-include state=directory

# - name: copy ca certificate
#   copy: src={{ item }} dest=/etc/apache2/ssl/{{ item }}
#   with_items:
#     - GandiStandardSSLCA2.pem
#   notify:
#     - restart apache2 service

# - name: copy ssl certificate
#   copy: src={{ item }} dest=/etc/apache2/ssl/{{ item }}
#   when: not is_development_environment
#   with_items:
#     - "{{ front_hostname }}.crt"
#     - "{{ front_hostname }}.key"
#   notify:
#     - restart apache2 service

- name: create self-signed certificate
  shell: openssl req -new -nodes -x509 -subj "/C=FR/ST=IdF/L=Paris/O=IT/CN={{ front_web_public_host }}" -days 3650 -keyout /etc/apache2/ssl/{{ front_hostname }}.key -out /etc/apache2/ssl/{{ front_hostname }}.crt -extensions v3_ca
  args:
    creates: /etc/apache2/ssl/{{ front_hostname }}.crt
  when:
    - is_development_environment
    - http_protocol_prefix == 'https'
  notify:
    - restart apache2 service

- name: install certbot
  get_url:
    url: https://dl.eff.org/certbot-auto
    dest: /opt/certbot
  when:
    - http_protocol_prefix == 'https'
    - environment_name == 'prod'

- name: make certbot executable
  file: path=/opt/certbot/certbot-auto mode=a+x
  when:
    - http_protocol_prefix == 'https'
    - environment_name == 'prod'

- name: create cron job to renew letsencrypt certificates
  cron: name="renew letsencrypt certificates" state=present special_time=daily job="/opt/certbot/certbot-auto renew --quiet --no-self-upgrade"
  when:
    - http_protocol_prefix == 'https'
    - environment_name == 'prod'

- name: remove unused sites
  file: path=/etc/apache2/sites-available/{{ item }} state=absent
  with_items:
    - 000-default.conf
    - default-ssl.conf

- name: set global server name
  lineinfile: dest=/etc/apache2/apache2.conf line='ServerName localhost'
